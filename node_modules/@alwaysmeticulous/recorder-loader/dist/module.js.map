{"mappings":"ACEA,MAAM,oDAA8B;AAK7B,MAAM,4CAA0B,OACrC,UACkB;IAClB,iEAAiE;IACjE,MAAM,iDAA2B,SAAS,KAAK,CAAC,CAAC,QAAU;QACzD,QAAQ,KAAK,CAAC;IAChB;AACF;AAEA,MAAM,mDAA6B,CAAC,aAClC,UAAS,oBACT,iBAAgB,6BAChB,0BAAyB,cACzB,WAAU,EACV,iBAAiB,iBAAgB,mBACjC,gBAAe,kBACf,eAAc,sBACd,mBAAkB,gBAClB,aAAY,EACE,GAAoB;IAClC,IAAI,YAAY,KAAK;IAErB,OAAO,IAAI,QAAc,CAAC,SAAS,SAAW;QAC5C,MAAM,kBAAkB,oBAAoB;QAE5C,IAAI,kBAAkB,GACpB,WAAW,IAAM;YACf,YAAY,IAAI;YAChB;QACF,GAAG;QAGL,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,IAAI,GAAG;QACd,MAAM,kBAAkB,mBAAmB;QAC3C,OAAO,GAAG,GAAG,IAAI,IAAI,gCAAgC,iBAAiB,IAAI;QAE1E,sBAAsB;QACtB,MAAM,cAAc;QACpB,YAAY,0BAA0B,GAAG;QAEzC,IAAI,qBAAqB,WACvB,YAAY,6BAA6B,GAAG;QAG9C,IAAI,eAAe,WACjB,YAAY,0BAA0B,GAAG;QAG3C,IAAI,8BAA8B,WAChC,YAAY,sCAAsC,GAChD;QAGJ,IAAI,mBAAmB,WACrB,YAAY,0BAA0B,GAAG;QAG3C,IAAI,iBAAiB,WACnB,YAAY,oCAAoC,GAAG;QAGrD,IAAI,sBAAsB,IAAI,IAAI,mBAAmB,MAAM,GAAG,GAC5D,YAAY,sCAAsC,GAAG;QAGvD,OAAO,MAAM,GAAG,WAAY;YAC1B,IAAI,WAAW;gBACb,QAAQ,KAAK,CACX;gBAEF,kDAAkD;gBAClD;YACF,CAAC;YAED,MAAM,qBAAqB,OAAO,YAAY,EAAE;YAChD,IAAI,OAAO,uBAAuB,YAAY;gBAC5C,OAAO;gBACP;YACF,CAAC;YAED,IAAI;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,OAAO;YACT;YAEA;QACF;QACA,OAAO,OAAO,GAAG,IAAM;YACrB,OAAO;QACT;QAEA,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;AACF;AAOO,MAAM,4CAAuB;;AD7GpC","sources":["packages/recorder-loader/src/index.ts","packages/recorder-loader/src/loader.ts"],"sourcesContent":["export { loadAndStartRecorder, tryLoadAndStartRecorder } from \"./loader\";\n","import { LoaderOptions } from \"./loader.types\";\n\nconst DEFAULT_MAX_MS_TO_BLOCK_FOR = 2_000;\n\n/**\n * Load and start the Meticulous Recorder\n */\nexport const tryLoadAndStartRecorder = async (\n  options: LoaderOptions\n): Promise<void> => {\n  // Try to load the recorder and silence any initialisation error.\n  await unsafeLoadAndStartRecorder(options).catch((error) => {\n    console.error(error);\n  });\n};\n\nconst unsafeLoadAndStartRecorder = ({\n  projectId,\n  uploadIntervalMs,\n  snapshotLinkedStylesheets,\n  commitHash,\n  maxMsToBlockFor: maxMsToBlockFor_,\n  snippetsBaseUrl,\n  forceRecording,\n  responseSanitizers,\n  isProduction,\n}: LoaderOptions): Promise<void> => {\n  let abandoned = false;\n\n  return new Promise<void>((resolve, reject) => {\n    const maxMsToBlockFor = maxMsToBlockFor_ ?? DEFAULT_MAX_MS_TO_BLOCK_FOR;\n\n    if (maxMsToBlockFor > 0) {\n      setTimeout(() => {\n        abandoned = true;\n        resolve();\n      }, maxMsToBlockFor);\n    }\n\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    const baseSnippetsUrl = snippetsBaseUrl || \"https://snippet.meticulous.ai\";\n    script.src = new URL(\"v1/meticulous-manual-init.js\", baseSnippetsUrl).href;\n\n    // Setup configuration\n    const typedWindow = window;\n    typedWindow.METICULOUS_RECORDING_TOKEN = projectId;\n\n    if (uploadIntervalMs !== undefined) {\n      typedWindow.METICULOUS_UPLOAD_INTERVAL_MS = uploadIntervalMs;\n    }\n\n    if (commitHash !== undefined) {\n      typedWindow.METICULOUS_APP_COMMIT_HASH = commitHash;\n    }\n\n    if (snapshotLinkedStylesheets !== undefined) {\n      typedWindow.METICULOUS_SNAPSHOT_LINKED_STYLESHEETS =\n        snapshotLinkedStylesheets;\n    }\n\n    if (forceRecording !== undefined) {\n      typedWindow.METICULOUS_FORCE_RECORDING = forceRecording;\n    }\n\n    if (isProduction !== undefined) {\n      typedWindow.METICULOUS_IS_PRODUCTION_ENVIRONMENT = isProduction;\n    }\n\n    if (responseSanitizers != null && responseSanitizers.length > 0) {\n      typedWindow.METICULOUS_NETWORK_RESPONSE_SANITIZERS = responseSanitizers;\n    }\n\n    script.onload = function () {\n      if (abandoned) {\n        console.debug(\n          \"Meticulous snippet abandoned due to max blocking time reached.\"\n        );\n        // At this point the promise has already resolved.\n        return;\n      }\n\n      const initialiseRecorder = window.__meticulous?.initialiseRecorder;\n      if (typeof initialiseRecorder !== \"function\") {\n        reject(\"Meticulous recorder failed to initialise.\");\n        return;\n      }\n\n      try {\n        initialiseRecorder();\n      } catch (error) {\n        reject(error);\n      }\n\n      resolve();\n    };\n    script.onerror = () => {\n      reject(\"Meticulous recorder failed to initialise.\");\n    };\n\n    document.head.appendChild(script);\n  });\n};\n\n/**\n * @deprecated Use `tryLoadAndStartRecorder` instead.\n *\n * Load and start the Meticulous Recorder\n */\nexport const loadAndStartRecorder = unsafeLoadAndStartRecorder;\n"],"names":[],"version":3,"file":"module.js.map"}